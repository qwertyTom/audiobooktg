import config
import sqlite3
import telebot
from telebot.types import InputMediaAudio
from telebot import types
import markups
from array import *

bot = telebot.TeleBot(config.token)

conn = sqlite3.connect('db.db', check_same_thread=False)
cursor = conn.cursor()
bot = telebot.TeleBot(config.token)

kat = "test"
genre = "test"


sqlkat = 'SELECT file_id FROM audio WHERE "kat"=? LIMIT ?, 10'

sqlgenre = 'SELECT file_id FROM audio WHERE "genre"=? LIMIT 10'


def db_table_val(file_id: str, file_name: str, kat: str, genre: str):
	cursor.execute('INSERT INTO audio (file_id, file_name, kat, genre) VALUES (?, ?, ?, ?)', (file_id, file_name, kat, genre))
	conn.commit()

@bot.message_handler(content_types=["audio"])
def handle_files(message):
	document_name = message.audio.file_name
	document_id = message.audio.file_id
	db_table_val(file_id=document_id, file_name=document_name, kat=kat, genre=genre)
	bot.send_message(message.chat.id, "–ö–Ω–∏–≥–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
	#bot.send_message(message.chat.id, "–ò–º—è: " + document_name + document_id) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é file_id

@bot.message_handler(commands=['start', 'home'])
def get_text_messages(message):
	bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è –∏—â—É –∞—É–¥–∏–æ–∫–Ω–∏–≥–∏ –ø–æ –Ω–∞—à–µ–π –æ–±—à–∏—Ä–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.", reply_markup = markups.startmenu_markup)

@bot.message_handler(commands=['help'])
def get_text_messages(message):
	bot.reply_to(message, "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: /menu - –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")

@bot.message_handler(commands=['menu'])
def get_text_messages(message):
	bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup = markups.menu_markup)

@bot.message_handler(commands=['add'])
def get_text_messages(message):
	global mci
	mci = message.chat.id
	if mci == -1001527235017:
		bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∞—É–¥–∏–æ–∫–Ω–∏–≥", reply_markup = markups.kategory_markup)
		bot.register_next_step_handler(message, addkat)
def addkat(message):
	global kat
	kat = message.text
	bot.send_message(message.chat.id, "–ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤—ã–±—Ä–∞–Ω–∞")
	bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä –∞—É–¥–∏–æ–∫–Ω–∏–≥", reply_markup = markups.genre_markup)
	bot.register_next_step_handler(message, addgenre)
def addgenre(message):
	global genre
	genre = message.text
	bot.send_message(message.chat.id, "–ñ–∞–Ω—Ä –≤—ã–±—Ä–∞–Ω")

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
	if call.message:

		data = []
		kat = call.data.split('|')[0]
		numstr = int(call.data.split('|')[1])
		direction = call.data.split('|')[2]

		skip = numstr*10

		if direction == "–Ω–∞–∑–∞–¥":
			numstr = numstr-1

			param = str(kat) + '|' + str(numstr)

			for value in cursor.execute(sqlkat, (kat,skip,)):
				separator=""
				dats = separator.join(value)
				data.append(InputMediaAudio(dats))
			bot.send_media_group(call.message.chat.id, data)

			dm = len(cursor.execute('SELECT file_id FROM audio WHERE "kat"=?', (kat,)).fetchall())
			print(dm)

			if( numstr == 1 ):
				nav = types.InlineKeyboardMarkup(row_width=2)
				button2 = types.InlineKeyboardButton(numstr, callback_data=param+'|—Å—Ç—Ä–∞–Ω–∏—Ü–∞')
				button3 = types.InlineKeyboardButton("–í–ø–µ—Ä–µ–¥", callback_data=param+'|–≤–ø–µ—Ä–µ–¥')
				nav.add(button2,button3)
			else:
				nav = types.InlineKeyboardMarkup(row_width=3)
				button1 = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data=param+'|–Ω–∞–∑–∞–¥')
				button2 = types.InlineKeyboardButton(numstr, callback_data=param+'|—Å—Ç—Ä–∞–Ω–∏—Ü–∞')
				button3 = types.InlineKeyboardButton("–í–ø–µ—Ä–µ–¥", callback_data=param+'|–≤–ø–µ—Ä–µ–¥')
				nav.add(button1,button2,button3)

			bot.send_message(call.message.chat.id, "–ê—É–¥–∏–æ–∫–Ω–∏–≥–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É "+kat, reply_markup = nav)

		if direction == "–≤–ø–µ—Ä–µ–¥":
			numstr = numstr+1

			param = str(kat) + '|' + str(numstr)

			for value in cursor.execute(sqlkat, (kat,skip,)):
				separator=""
				dats = separator.join(value)
				data.append(InputMediaAudio(dats))
			bot.send_media_group(call.message.chat.id, data)

			dm = len(cursor.execute('SELECT file_id FROM audio WHERE "kat"=?', (kat,)).fetchall())

			if( dm > (numstr*10) ):
				nav = types.InlineKeyboardMarkup(row_width=3)
				button1 = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data=param+'|–Ω–∞–∑–∞–¥')
				button2 = types.InlineKeyboardButton(numstr, callback_data=param+'|—Å—Ç—Ä–∞–Ω–∏—Ü–∞')
				button3 = types.InlineKeyboardButton("–í–ø–µ—Ä–µ–¥", callback_data=param+'|–≤–ø–µ—Ä–µ–¥')
				nav.add(button1,button2,button3)
			else:
				nav = types.InlineKeyboardMarkup(row_width=2)
				button1 = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data=param+'|–Ω–∞–∑–∞–¥')
				button2 = types.InlineKeyboardButton(numstr, callback_data=param+'|—Å—Ç—Ä–∞–Ω–∏—Ü–∞')
				nav.add(button1,button2)


			bot.send_message(call.message.chat.id, "–ê—É–¥–∏–æ–∫–Ω–∏–≥–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É "+kat, reply_markup = nav)

@bot.message_handler(content_types = ['text'])
def send_audio(message):

	data = []
	if message.text == "–ö–∞—Ç–∞–ª–æ–≥üìï":
		bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup = markups.kategory_markup)
	if message.text == "–ñ–∞–Ω—Ä—ã":
		bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup = markups.genre_markup)
	if message.text == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
		bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup = markups.startmenu_markup)
	if message.text == "–ù–∞–∑–∞–¥":
		bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", reply_markup = markups.kategory_markup)


	#–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	if message.text == "–ë–∏–∑–Ω–µ—Å –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞" or message.text == "–ê—É–¥–∏–æ—Å–∫–∞–∑–∫–∏" or message.text == "–ê—É–¥–∏–æ—Å–ø–µ–∫—Ç–∞–∫–ª–∏" or message.text == "–†—É—Å—Å–∫–∞—è –∫–ª–∞—Å—Å–∏–∫–∞" or message.text == "–ó–∞—Ä—É–±–µ–∂–Ω–∞—è –∫–ª–∞—Å—Å–∏–∫–∞" or message.text == "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏" or message.text == "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–µ —è–∑—ã–∫–∏" or message.text == "–õ–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç" or message.text == "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞" or message.text == "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞—Ä—É–±–µ–∂–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞" or message.text == "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ä—É—Å—Å–∫–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞" or message.text == "–§–∏–ª–æ—Å–æ—Ñ–∏—è –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—è" or message.text == "–®–∫–æ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞" or message.text == "–≠—Ä–æ—Ç–∏–∫–∞":
		kat = message.text
		skip = 0
		numstr = 1
		for value in cursor.execute('SELECT file_id FROM audio WHERE "kat"=?', (kat,)).fetchall():
			separator=""
			dats = separator.join(value)
			data.append(InputMediaAudio(dats))

		bot.send_media_group(message.chat.id, data[:10])

		param = str(kat) + '|' + str(numstr)
		dm = len(cursor.execute('SELECT file_id FROM audio WHERE "kat"=?', (kat,)).fetchall())

		if( dm > (numstr*10) ):
			nav = types.InlineKeyboardMarkup(row_width=2)
			button2 = types.InlineKeyboardButton(numstr, callback_data="numst")
			button3 = types.InlineKeyboardButton("–í–ø–µ—Ä–µ–¥", callback_data=param+'|–≤–ø–µ—Ä–µ–¥')
			nav.add(button2,button3)
			bot.send_message(message.chat.id, "–ù–∞–π–¥–µ–Ω–æ "+ str(dm)+" –∞—É–¥–∏–æ–∫–Ω–∏–≥ –ø–æ –∑–∞–ø—Ä–æ—Å—É: "+kat, reply_markup = nav)
		else:
			bot.send_message(message.chat.id, "–ù–∞–π–¥–µ–Ω–æ "+ str(dm)+" –∞—É–¥–∏–æ–∫–Ω–∏–≥ –ø–æ –∑–∞–ø—Ä–æ—Å—É: "+kat)


	#–∂–∞–Ω—Ä—ã
	if message.text == "–î–µ—Ç–µ–∫—Ç–∏–≤—ã" or message.text == "–ò—Å—Ç–æ—Ä–∏—è" or message.text == "–ö–ª–∞—Å—Å–∏–∫–∞" or message.text == "–ù–æ–Ω_—Ñ–∏–∫—à–µ–Ω" or message.text == "–ü–æ—ç–∑–∏—è" or message.text == "–ü–æ–¥—Ä–æ—Å—Ç–∫–∞–º" or message.text == "–ü–æ–ª–∏—Ç–∏–∫–∞" or message.text == "–†–æ–º–∞–Ω—ã" or message.text == "–¢—Ä–∏–ª–ª–µ—Ä" or message.text == "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞" or message.text == "–•–æ—Ä–æ—Ä" or message.text == "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ":
		genre = message.text
		bot.send_message(message.chat.id, "–ê—É–¥–∏–æ–∫–Ω–∏–≥–∏ –∂–∞–Ω—Ä–∞ "+genre)
		for value in cursor.execute(sqlgenre, (genre,)).fetchmany(4):
			separator=""
			dats = separator.join(value)
			data.append(InputMediaAudio(dats))
		bot.send_media_group(message.chat.id, data)


bot.polling(none_stop=True, interval=0)
